T.c --> n^2
S.c --> n^2
class Solution {
    public int snakesAndLadders(int[][] board) {
        Queue<Integer> q = new LinkedList<>();
        int m = board.length;
        int n = board[0].length;
        q.add(0);
        List<Integer> result = new ArrayList<>();
        int even = 0;
        for(int i =m-1; i>=0; i--){
           if(even%2 == 0){
            for(int j =0; j<n;j++){
               if(board[i][j] != -1){
                  result.add(board[i][j]-1);
               }else{
                  result.add(board[i][j]);
               }                
            }
           }else{
            for(int j =n-1; j>=0;j--){
               if(board[i][j] != -1){
                  result.add(board[i][j]-1);
               }else{
                  result.add(board[i][j]);
               }        
            }
           }
           even++;
        }
        int move = 0;
        while(!q.isEmpty()){
          int size = q.size();
          for(int i =0; i<size; i++){
            int curr = q.poll();
            if(curr == n*n-1){
               return move;
            }
            for(int j =1; j<7; j++){
                if(curr+j >= n*n){
                    continue;
                }
                if(result.get(curr+j) == -1){                   
                   q.add(curr+j);
                   result.set(curr+j,-2);
                }else if(result.get(curr+j) != -2){
                   q.add(result.get(curr+j));
                   result.set(curr+j,-2);
                }                
            }                        
          }
          move++;
        }
        return -1; 
    }
}